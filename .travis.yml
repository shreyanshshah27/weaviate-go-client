dist: xenial
os: linux
language: go

notifications:
  email:
    on_success: change

jobs:
  include:
    - stage: "Test v1"
      go: "1.13.6"
      env:
        - EXTERNAL_WEAVIATE_RUNNING="true"
      before_install:
        - go get -u -v golang.org/x/lint/golint
        - go get -v ./...
      script:
        - docker-compose -f test/docker-compose.yaml up -d
        - echo "Unit tests"
        - go test -v ./weaviate/...
        - echo "Integration tests"
        - ( for pkg in $(go list ./... | grep 'weaviate-go-client/test'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done)
        - echo "Linting"
        # - golint -set_exit_status ./...
    - stage: "Test v2"
      go: "1.13.6"
      env:
        - EXTERNAL_WEAVIATE_RUNNING="true"
      before_install:
        - cd ./v2
        - go get -u -v golang.org/x/lint/golint
        - go get -v ./...
      script:
        - docker-compose -f test/docker-compose.yaml up -d
        - echo "Unit tests"
        - go test -v ./weaviate/...
        - echo "Integration tests"
        - ( for pkg in $(go list ./... | grep 'weaviate-go-client/v2/test'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done)
        # - echo "Linting"
        # - golint -set_exit_status ./...
    - stage: "Test v3"
      go: "1.16"
      env:
        - EXTERNAL_WEAVIATE_RUNNING="true"
      before_install:
        - cd ./v3
        - go get -v ./...
      script:
        - docker-compose -f test/docker-compose.yaml up -d
        - echo "Unit tests"
        - go test -v ./weaviate/...
        - echo "Integration tests"
        - ( for pkg in $(go list ./... | grep 'weaviate-go-client/v3/test'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done)
    - stage: "Test v4"
      go: "1.16"
      env:
        - EXTERNAL_WEAVIATE_RUNNING="false"
      before_install:
        - cd ./v4
        - go get -v ./...
      script:
        - echo "Unit tests"
        - go test -v ./weaviate/...
        - echo "Integration tests"
        - ( for pkg in $(go list ./... | grep 'weaviate-go-client/v4/test'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done )
    - stage: "Test v5"
      go: "1.19"
      env:
        - EXTERNAL_WEAVIATE_RUNNING="false"
      before_install:
        - cd ./v5
        - go get -v ./...
      script:
        - echo "Unit tests"
        - go test -v ./weaviate/...
        - echo "Integration tests"
        - ( for pkg in $(go list ./... | grep 'weaviate-go-client/v5/test'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done )    
